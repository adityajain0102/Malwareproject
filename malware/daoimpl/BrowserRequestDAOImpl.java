package com.malware.daoimpl;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.malware.bean.BrowserURLBean;
import com.malware.dao.AbstractDataAccessObject;
import com.malware.exception.ConnectionException;

public class BrowserRequestDAOImpl extends AbstractDataAccessObject {
	Connection connection;
	PreparedStatement preparedStatement;
	ResultSet resultSet;
	boolean flag = false;

	/**
	 * The closeConnection method of the AttendanceDaoImpl Class. <br>
	 * 
	 * This method is called when to take Employee InTime.
	 * 
	 * @throws ConnectionException
	 *             if an error occurred
	 */
	public void closeConnection() throws ConnectionException {
		try {
			if (resultSet != null)
				resultSet.close();
			if (preparedStatement != null)
				preparedStatement.close();
			if (connection != null)
				connection.close();
		} catch (SQLException ex) {
			throw new ConnectionException(
					"Server Busy please Try after Sometine");
		}
	}


//	public boolean insertSearchKeyword(String keyword)
//			throws FileNotFoundException, ConnectionException {
//		boolean flag = false;
//		try {
//			connection = getConnection();
//			preparedStatement = connection
//					.prepareStatement("insert into DOMAINS values((select nvl(max(key),1000)+1 from DOMAINS),?)");
//			preparedStatement.setString(1, keyword.toLowerCase());
//			int result = preparedStatement.executeUpdate();
//			if (result > 0) {
//				flag = true;
//			} else {
//				flag = false;
//			}
//		} catch (Exception e) {
//			System.out.println(e);
//			e.printStackTrace();
//			// TODO: handle exception
//		} finally {
//			closeConnection();
//		}
//		return flag;
//	}
//
	public List<BrowserURLBean> viewStorageServerDetails() throws ConnectionException {
		List<BrowserURLBean> listBrowserURLBean = new ArrayList<BrowserURLBean>();
		BrowserURLBean browserURLBean = null;
		try {
			connection = getConnection();
			preparedStatement = connection
					.prepareStatement("select * from STORAGESERVER order by SCDATE desc");
			resultSet = preparedStatement.executeQuery();
			while (resultSet.next()) {
				browserURLBean = new BrowserURLBean();
				browserURLBean.setsCID(resultSet.getInt(1));
				browserURLBean.setScURL(resultSet.getString(2));
				browserURLBean.setScHOST(resultSet.getString(3));
				browserURLBean.setScPORT(resultSet.getString(4));
				browserURLBean.setScPROTOCOL(resultSet.getString(5));
				Blob b = resultSet.getBlob(6);
//				byte b1[] = b.getBytes(1, (int) b.length());
//				String path = new File(".").getAbsoluteFile()+"\\htmlfiles\\"+resultSet.getInt(1)+".html";
//				OutputStream fout = new FileOutputStream(path);
//				fout.write(b1);
//				browserURLBean.setScResponseContent(path);
				browserURLBean.setScDate(resultSet.getDate(7)+"");
				browserURLBean.setScSize(resultSet.getInt(8));
				browserURLBean.setScRequestType(resultSet.getString(9));
				browserURLBean.setScTotalPackets(resultSet.getInt(10));
				listBrowserURLBean.add(browserURLBean);
			}
		} catch (Exception e) {
			System.out.println(e);
			e.printStackTrace();
			// TODO: handle exception
		} finally {
			closeConnection();
		}
		return listBrowserURLBean;
	}
//
//	public Vector<SearchForm> viewInterfaceDataKeyworsLists(int keyref)
//			throws ConnectionException {
//		Vector<SearchForm> vSearchForms = new Vector<SearchForm>();
//		SearchForm searchForm = null;
//		try {
//			connection = getConnection();
//			preparedStatement = connection
//					.prepareStatement("select * from DOMAINCORPUSDOCUMENTS where keyref=?");
//			preparedStatement.setInt(1, keyref);
//			resultSet = preparedStatement.executeQuery();
//			while (resultSet.next()) {
//				searchForm = new SearchForm();
//				searchForm.setKey(resultSet.getInt(1));
//				searchForm.setWordindex(resultSet.getString(3));
//				vSearchForms.add(searchForm);
//			}
//		} catch (Exception e) {
//			System.out.println(e);
//			e.printStackTrace();
//			// TODO: handle exception
//		} finally {
//			closeConnection();
//		}
//		return vSearchForms;
//	}
//
//	public List<SearchForm> viewKeywordIndex() throws ConnectionException {
//		List<SearchForm> vSearchForms = new ArrayList<SearchForm>();
//		SearchForm searchForm = null;
//		try {
//			connection = getConnection();
//			preparedStatement = connection
//					.prepareStatement("select * from DOMAINS");
//			resultSet = preparedStatement.executeQuery();
//			while (resultSet.next()) {
//				searchForm = new SearchForm();
//				searchForm.setKey(resultSet.getInt(1));
//				searchForm.setWordindex(resultSet.getString(2));
//				vSearchForms.add(searchForm);
//			}
//		} catch (Exception e) {
//			System.out.println(e);
//			e.printStackTrace();
//			// TODO: handle exception
//		} finally {
//			closeConnection();
//		}
//		return vSearchForms;
//	}

	public boolean addStorageData(BrowserURLBean browserURLBean)
			throws ConnectionException {
		// TODO Auto-generated method stub
		boolean flag = false;
		try {
			connection = getConnection();
			preparedStatement = connection
					.prepareStatement("insert into STORAGESERVER values((select nvl(max(SCID),100)+1 from STORAGESERVER),?,?,?,?,?,sysdate,?,?,?)");
			preparedStatement.setString(1, browserURLBean.getScURL());
			preparedStatement.setString(2, browserURLBean.getScHOST());
			preparedStatement.setString(3, browserURLBean.getScPORT());
			preparedStatement.setString(4, browserURLBean.getScPROTOCOL());
			
			BufferedWriter bw = null;
			FileWriter fw = null;
			try {
				String content = browserURLBean.getScResponseContent();
				fw = new FileWriter(new File(".").getAbsoluteFile()+"\\htmlfiles\\temp.txt");
				bw = new BufferedWriter(fw);
				bw.write(content);
			} catch (IOException e) {
				e.printStackTrace();
			} finally {
				try {
					if (bw != null)
						bw.close();
					if (fw != null)
						fw.close();
				} catch (IOException ex) {
					ex.printStackTrace();
				}
			}
			
			
			File f = new File(new File(".").getAbsoluteFile()+"\\htmlfiles\\temp.txt");
			FileInputStream fis = new FileInputStream(f);
			preparedStatement.setBinaryStream(5, fis, (int) f.length());
			preparedStatement.setInt(6, browserURLBean.getScSize());
			preparedStatement.setString(7, browserURLBean.getScRequestType());
			preparedStatement.setInt(8, browserURLBean.getScResponseContent().getBytes().length);
			int result = preparedStatement.executeUpdate();
			if (result > 0) {
				flag = true;
			} else {
				flag = false;
			}
		} catch (Exception e) {
			System.out.println(e);
			e.printStackTrace();
			// TODO: handle exception
		} finally {
			closeConnection();
		}
		return flag;
	}

//	public boolean addMetaDataInterfaceWordIndex(SearchForm searchForm)
//			throws ConnectionException {
//		// TODO Auto-generated method stub
//		boolean flag = false;
//		try {
//			connection = getConnection();
//			preparedStatement = connection
//					.prepareStatement("insert into DOMAINCORPUSDOCUMENTS values((select nvl(max(INTERFACEID),1000)+1 from DOMAINCORPUSDOCUMENTS),?,?,?,?,?)");
//			preparedStatement.setInt(1, searchForm.getKey());
//			File f = new File(searchForm.getWorddocument());
//			FileInputStream fis = new FileInputStream(f);
//			System.out.println(f.getName());
//			String fileType = f.getName().split("\\.")[1];
//			String fileName = f.getName().split("\\.")[0];
//			if (fileName.endsWith(".jpg") || fileName.endsWith(".pdf")
//					|| fileName.endsWith(".jpeg") || fileName.endsWith(".gif")
//					|| fileName.endsWith(".png")) {
//				throw new LoginException("Please select text files only");
//			}
//			preparedStatement.setString(2, fileName);
//			preparedStatement.setString(3, searchForm.getIndexdescription());
//			preparedStatement.setBinaryStream(4, fis, (int) f.length());
//			preparedStatement.setString(5, fileType);
//			int result = preparedStatement.executeUpdate();
//			if (result > 0) {
//				flag = true;
//			} else {
//				flag = false;
//			}
//		} catch (Exception e) {
//			System.out.println(e);
//			e.printStackTrace();
//			// TODO: handle exception
//		} finally {
//			closeConnection();
//		}
//		return flag;
//	}
//
//	public String searchData(String parameter) {
//		// TODO Auto-generated method stub
//		String finalSearch = "";
//		try {
//
//			String keywordindex = parameter;
//			String[] word = keywordindex.split(" ");
//
//			for (int i = 0; word.length > 0; i++) {
//				System.out.println(word[i]);
//				if (!word[i].equals("")) {
//					connection = getConnection();
//					preparedStatement = connection
//							.prepareStatement("select key from DOMAINS where wordindex like '%"
//									+ word[i].toLowerCase() + "%'");
//					resultSet = preparedStatement.executeQuery();
//					while (resultSet.next()) {
//						int key = resultSet.getInt(1);
//						System.out.println(key);
//						preparedStatement1 = connection
//								.prepareStatement("SELECT INTERFACEIREFD, COUNT(*) TotalCount,(select FILENAME from DOMAINCORPUSDOCUMENTS where INTERFACEID=INTERFACEIREFD  ) FROM MAINDATAINDEX where MAINDATAINDEX.METADATKEYREF=? GROUP BY INTERFACEIREFD HAVING COUNT(*) > 1 ORDER BY COUNT(*) DESC");
//						preparedStatement1.setInt(1, key);
//						resultSet1 = preparedStatement1.executeQuery();
//						while (resultSet1.next()) {
//							String data = resultSet1.getString(3);
//							finalSearch += data + "\n";
//						}
//					}
//				}
//			}
//		} catch (SQLException s) {
//			System.out.println("SQL code does not execute." + s);
//		} catch (Exception e) {
//			e.printStackTrace();
//		} finally {
//			try {
//				closeConnection();
//			} catch (ConnectionException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//
//		return finalSearch;
//	}
//
//	public List<SearchForm> searchRecords(String parameter, String realpath) {
//		// TODO Auto-generated method stub
//		List<SearchForm> vSearchForms = new ArrayList<SearchForm>();
//		SearchForm searchForm = null;
//		try {
//			connection = getConnection();
//			preparedStatement = connection
//					.prepareStatement("select * from DOMAINS where WORDINDEX like '"
//							+ parameter + "'");
//
//			resultSet = preparedStatement.executeQuery();
//			if (resultSet.next()) {
//				preparedStatement1 = connection
//						.prepareStatement("select * from DOMAINCORPUSDOCUMENTS where KEYREF = "
//								+ resultSet.getInt(1));
//				resultSet1 = preparedStatement1.executeQuery();
//				
//				while (resultSet1.next()) {
//
//					Map<String,Integer> docMap = new HashMap<String,Integer>();
//					Set<String> totalWordsInaFile = new HashSet<String>();
//					searchForm = new SearchForm();
//					String path = realpath;
//					try {
//						Blob b = resultSet1.getBlob(5);
//						byte b1[] = b.getBytes(1, (int) b.length());
//						path = path + "\\" + resultSet1.getString(3) + "."+ resultSet1.getString(6);
//						System.out.println("path  :" + path);
//						OutputStream fout = new FileOutputStream(path);
//						fout.write(b1);
//						
//						
//						BufferedReader br = null;
//						try {
//							String sCurrentLine;
//							br = new BufferedReader(new FileReader(path));
//							while ((sCurrentLine = br.readLine()) != null) {
//								String currentArray[] = sCurrentLine.trim().split("\\s+");
//								for (String word : currentArray) {
//									if(word.contains(":") ||word.contains("\\.") ||word.contains("?") || word.contains("the"))
//											word = word.replace(":","").replace(".","").replace("?", "").replace("the", "");
//									if(!"".equals(word.trim())){
//										if(docMap.containsKey(word.trim())){
//											docMap.put(word.trim(),docMap.get(word.trim())+1);
//										}else{
//											docMap.put(word.trim(),0);
//										}
//										totalWordsInaFile.add(word.trim());
//									}
//								}
//							}
//						} catch (IOException e) {
//							e.printStackTrace();
//						} finally {
//							try {
//								if (br != null)
//									br.close();
//							} catch (IOException ex) {
//								ex.printStackTrace();
//							}
//						}
//
//						
//						
//					} catch (Exception e) {
//					}
//					searchForm.setInterfaceid(resultSet1.getInt(1));
//					searchForm.setKeyref(resultSet1.getInt(2));
//					searchForm.setDatadescription(resultSet1.getString(4));
//					searchForm.setWorddocumentpath(path);
//					searchForm.setWorddocument(resultSet1.getString(3) + "."
//							+ resultSet1.getString(6));
//
//					System.out.println("map : "+docMap);
//					System.out.println("all keys :"+totalWordsInaFile);
//					System.out.println("------------------------");
//
//					searchForm.setDocStringCount(docMap);
//					searchForm.setDocTotalWords(totalWordsInaFile);
//					vSearchForms.add(searchForm);
//				}
//			}
//		} catch (SQLException s) {
//			System.out.println("SQL code does not execute." + s);
//		} catch (Exception e) {
//			e.printStackTrace();
//		} finally {
//			try {
//				closeConnection();
//			} catch (ConnectionException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//		return vSearchForms;
//	}
//	
//	public List<SearchForm> domainRelevanceSearchRecords(String parameter, String realpath) {
//		// TODO Auto-generated method stub
//		List<SearchForm> vSearchForms = new ArrayList<SearchForm>();
//		SearchForm searchForm = null;
//		try {
//			connection = getConnection();
//			preparedStatement = connection
//					.prepareStatement("select * from DOMAINS where WORDINDEX like '"
//							+ parameter + "'");
//
//			resultSet = preparedStatement.executeQuery();
//			if (resultSet.next()) {
//				preparedStatement1 = connection
//						.prepareStatement("select * from DOMAINCORPUSDOCUMENTS where KEYREF = "
//								+ resultSet.getInt(1));
//				resultSet1 = preparedStatement1.executeQuery();
//				
//				while (resultSet1.next()) {
//
//					Map<String,Integer> docMap = new HashMap<String,Integer>();
//					Set<String> totalWordsInaFile = new HashSet<String>();
//					searchForm = new SearchForm();
//					String path = realpath;
//					try {
//						Blob b = resultSet1.getBlob(5);
//						byte b1[] = b.getBytes(1, (int) b.length());
//						path = path + "\\" + resultSet1.getString(3) + "."+ resultSet1.getString(6);
//						System.out.println("path  :" + path);
//						OutputStream fout = new FileOutputStream(path);
//						fout.write(b1);
//						
//						
//						BufferedReader br = null;
//						try {
//							String sCurrentLine;
//							br = new BufferedReader(new FileReader(path));
//							while ((sCurrentLine = br.readLine()) != null) {
//								String currentArray[] = sCurrentLine.trim().split("\\s+");
//								for (String word : currentArray) {
//									if(word.contains(":") ||word.contains("\\.") ||word.contains("?") || word.contains("the"))
//										word = word.replace(":","").replace(".","").replace("?", "").replace("the", "");
//									if(!"".equals(word.trim())){
//										if(docMap.containsKey(word.trim())){
//											docMap.put(word.trim(),docMap.get(word.trim())+1);
//										}else{
//											docMap.put(word.trim(),0);
//										}
//										totalWordsInaFile.add(word.trim());
//									}
//								}
//							}
//						} catch (IOException e) {
//							e.printStackTrace();
//						} finally {
//							try {
//								if (br != null)
//									br.close();
//							} catch (IOException ex) {
//								ex.printStackTrace();
//							}
//						}
//					} catch (Exception e) {
//					}
//					searchForm.setInterfaceid(resultSet1.getInt(1));
//					searchForm.setKeyref(resultSet1.getInt(2));
//					searchForm.setDatadescription(resultSet1.getString(4));
//					searchForm.setWorddocumentpath(path);
//					searchForm.setWorddocument(resultSet1.getString(3) + "."
//							+ resultSet1.getString(6));
//					System.out.println("map : "+docMap);
//					System.out.println("all keys :"+totalWordsInaFile);
//					System.out.println("------------------------");
//
//					searchForm.setDocStringCount(docMap);
//					searchForm.setDocTotalWords(totalWordsInaFile);
//					
//					int maxCount = 0;
//					String maxCountWord = "";
//					for (Map.Entry<String, Integer> entry : docMap.entrySet())
//					{
//						if(maxCount < entry.getValue()){
//							maxCount = entry.getValue();
//							maxCountWord = entry.getKey();
//						}
////					    System.out.println(entry.getKey() + "/" + entry.getValue());
//					}
//					searchForm.setMaxCount(maxCount);
//					searchForm.setMaxCountWord(maxCountWord);
//					
//					vSearchForms.add(searchForm);
//				}
//			}
//		} catch (SQLException s) {
//			System.out.println("SQL code does not execute." + s);
//		} catch (Exception e) {
//			e.printStackTrace();
//		} finally {
//			try {
//				closeConnection();
//			} catch (ConnectionException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//		return vSearchForms;
//	}
//	
//	public List<SearchForm> similaritySearchRecords(String parameter, String realpath) {
//		// TODO Auto-generated method stub
//		List<SearchForm> vSearchForms = new ArrayList<SearchForm>();
//		SearchForm searchForm = null;
//		try {
//			connection = getConnection();
//			preparedStatement = connection
//					.prepareStatement("select * from DOMAINS where WORDINDEX like '"
//							+ parameter + "'");
//
//			Set<String> globalwordsinAllfiles = new HashSet<String>();
//			resultSet = preparedStatement.executeQuery();
//			if (resultSet.next()) {
//				preparedStatement1 = connection
//						.prepareStatement("select * from DOMAINCORPUSDOCUMENTS where KEYREF = "
//								+ resultSet.getInt(1));
//				resultSet1 = preparedStatement1.executeQuery();
//
//				while (resultSet1.next()) {
//
//					Map<String,Integer> docMap = new HashMap<String,Integer>();
//					Set<String> totalWordsInaFile = new HashSet<String>();
//					searchForm = new SearchForm();
//					String path = realpath;
//					try {
//						Blob b = resultSet1.getBlob(5);
//						byte b1[] = b.getBytes(1, (int) b.length());
//						path = path + "\\" + resultSet1.getString(3) + "."+ resultSet1.getString(6);
//						System.out.println("path  :" + path);
//						OutputStream fout = new FileOutputStream(path);
//						fout.write(b1);
//						
//						
//						BufferedReader br = null;
//						try {
//							String sCurrentLine;
//							br = new BufferedReader(new FileReader(path));
//							while ((sCurrentLine = br.readLine()) != null) {
//								String currentArray[] = sCurrentLine.trim().split("\\s+");
//								for (String word : currentArray) {
//									if(word.contains(":") ||word.contains("\\.") ||word.contains("?") || word.contains("the"))
//										word = word.replace(":","").replace(".","").replace("?", "").replace("the", "");
//									if(!"".equals(word.trim())){
//										if(docMap.containsKey(word.trim())){
//											docMap.put(word.trim(),docMap.get(word.trim())+1);
//										}else{
//											docMap.put(word.trim(),0);
//										}
//										totalWordsInaFile.add(word.trim());
//										globalwordsinAllfiles.add(word.trim());
//									}
//								}
//							}
//						} catch (IOException e) {
//							e.printStackTrace();
//						} finally {
//							try {
//								if (br != null)
//									br.close();
//							} catch (IOException ex) {
//								ex.printStackTrace();
//							}
//						}
//					} catch (Exception e) {
//					}
//					searchForm.setInterfaceid(resultSet1.getInt(1));
//					searchForm.setKeyref(resultSet1.getInt(2));
//					searchForm.setDatadescription(resultSet1.getString(4));
//					searchForm.setWorddocumentpath(path);
//					searchForm.setWorddocument(resultSet1.getString(3) + "."
//							+ resultSet1.getString(6));
//					System.out.println("map : "+docMap);
//					System.out.println("all keys :"+totalWordsInaFile);
//					System.out.println("------------------------");
//
//					searchForm.setDocStringCount(docMap);
//					searchForm.setDocTotalWords(totalWordsInaFile);
//					
//					int maxCount = 0;
//					String maxCountWord = "";
//					for (Map.Entry<String, Integer> entry : docMap.entrySet())
//					{
//						if(maxCount < entry.getValue()){
//							maxCount = entry.getValue();
//							maxCountWord = entry.getKey();
//						}
////					    System.out.println(entry.getKey() + "/" + entry.getValue());
//					}
//					searchForm.setMaxCount(maxCount);
//					searchForm.setMaxCountWord(maxCountWord);
//					searchForm.setAllFileswordCount(globalwordsinAllfiles.size());
//					searchForm.setSimilarity((totalWordsInaFile.size()/globalwordsinAllfiles.size())*100);
//					searchForm.setStrength((totalWordsInaFile.size()/globalwordsinAllfiles.size())*50);
//					vSearchForms.add(searchForm);
//				}
//			}
//		} catch (SQLException s) {
//			System.out.println("SQL code does not execute." + s);
//		} catch (Exception e) {
//			e.printStackTrace();
//		} finally {
//			try {
//				closeConnection();
//			} catch (ConnectionException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//		return vSearchForms;
//	}
//	
//	
//	
//
//	public Vector<SearchForm> searchMetaDataRecords(int key) {
//		// TODO Auto-generated method stub
//		Vector<SearchForm> vSearchForms = new Vector<SearchForm>();
//		SearchForm searchForm = null;
//		try {
//			connection = getConnection();
//			preparedStatement = connection
//					.prepareStatement("select * from MAINDATAINDEX where INTERFACEIREFD=?");
//			preparedStatement.setInt(1, key);
//			resultSet = preparedStatement.executeQuery();
//			while (resultSet.next()) {
//				searchForm = new SearchForm();
//				searchForm.setDataindexid(resultSet.getInt(1));
//				searchForm.setInterfacerefid(resultSet.getInt(2));
//				searchForm.setTitle(resultSet.getString(3));
//				searchForm.setTitledata(resultSet.getString(4));
//				searchForm.setDatadate(resultSet.getString(5));
//				searchForm.setUrls(resultSet.getString(6));
//				vSearchForms.add(searchForm);
//			}
//		} catch (SQLException s) {
//			System.out.println("SQL code does not execute." + s);
//		} catch (Exception e) {
//			e.printStackTrace();
//		} finally {
//			try {
//				closeConnection();
//			} catch (ConnectionException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//		return vSearchForms;
//	}
//
//	public boolean addMainData(SearchForm searchForm)
//			throws ConnectionException {
//		// TODO Auto-generated method stub
//		// TODO Auto-generated method stub
//		boolean flag = false;
//		try {
//			connection = getConnection();
//			preparedStatement = connection
//					.prepareStatement("insert into MAINDATAINDEX values((select nvl(max(DATAINDEXID),1000)+1 from MAINDATAINDEX),?,?,?,sysdate,?,?)");
//			preparedStatement.setInt(1, searchForm.getKeyref());
//			preparedStatement.setString(2, searchForm.getTitlehead());
//			preparedStatement.setString(3, searchForm.getDatadescription());
//			preparedStatement.setString(4, searchForm.getUrls());
//			preparedStatement.setInt(5, searchForm.getKey());
//			int result = preparedStatement.executeUpdate();
//			if (result > 0) {
//				flag = true;
//			} else {
//				flag = false;
//			}
//		} catch (Exception e) {
//			System.out.println(e);
//			e.printStackTrace();
//			// TODO: handle exception
//		} finally {
//			closeConnection();
//		}
//		return flag;
//	}
//
//	public Vector<SearchForm> rankingSearchRecords(String parameter) {
//		// TODO Auto-generated method stub
//		Vector<SearchForm> vSearchForms = new Vector<SearchForm>();
//		SearchForm searchForm = null;
//		try {
//			connection = getConnection();
//			preparedStatement = connection
//					.prepareStatement("select key from DOMAINS where wordindex like '%"
//							+ parameter.toLowerCase() + "%'");
//			// preparedStatement.setString(1, parameter.toLowerCase());
//			resultSet = preparedStatement.executeQuery();
//			while (resultSet.next()) {
//				int key = resultSet.getInt(1);
//
//				preparedStatement1 = connection
//						.prepareStatement("SELECT INTERFACEIREFD, COUNT(*) TotalCount,(select TITLEDATA from DOMAINCORPUSDOCUMENTS where INTERFACEID=INTERFACEIREFD  ) FROM MAINDATAINDEX where MAINDATAINDEX.METADATKEYREF=? GROUP BY INTERFACEIREFD HAVING COUNT(*) > 1 ORDER BY COUNT(*) DESC");
//				preparedStatement1.setInt(1, key);
//				resultSet1 = preparedStatement1.executeQuery();
//				while (resultSet1.next()) {
//					preparedStatement2 = connection
//							.prepareStatement("select * from DOMAINCORPUSDOCUMENTS where INTERFACEID=?");
//					preparedStatement2.setInt(1, resultSet1.getInt(1));
//					resultSet2 = preparedStatement2.executeQuery();
//					if (resultSet2.next()) {
//						searchForm = new SearchForm();
//						searchForm.setInterfaceid(resultSet2.getInt(2));
//						searchForm.setKeyref(resultSet2.getInt(1));
//						searchForm.setTitle(resultSet2.getString(3));
//						searchForm.setTitledata(resultSet2.getString(4));
//						searchForm.setDatadescription(resultSet2.getString(5));
//						searchForm.setRecordscount(resultSet1.getInt(2));
//						vSearchForms.add(searchForm);
//					}
//				}
//			}
//		} catch (SQLException s) {
//			System.out.println("SQL code does not execute." + s);
//		} catch (Exception e) {
//			e.printStackTrace();
//		} finally {
//			try {
//				closeConnection();
//			} catch (ConnectionException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//		return vSearchForms;
//	}
//
//	public List<SearchForm> viewAllCorpusFiles(String realpath)
//			throws ConnectionException {
//		List<SearchForm> vSearchForm = new ArrayList<SearchForm>();
//		SearchForm searchForm = null;
//		String path = "";
//		try {
//			connection = AbstractDataAccessObject.getConnection();
//			preparedStatement = connection
//					.prepareStatement("select * from DOMAINCORPUSDOCUMENTS");
//			ResultSet rs = preparedStatement.executeQuery();
//			while (rs.next()) {
//				searchForm = new SearchForm();
//				path = realpath;
//				try {
//					Blob b = rs.getBlob(5);
//					byte b1[] = b.getBytes(1, (int) b.length());
//					path = path + "/" + rs.getString(3) + "." + rs.getString(6);
//					System.out.println("path  :" + path);
//					OutputStream fout = new FileOutputStream(path);
//					fout.write(b1);
//				} catch (Exception e) {
//					// TODO: handle exception
//				}
//				searchForm.setInterfaceid(rs.getInt(1));
//				searchForm.setKeyref(rs.getInt(2));
//				searchForm.setDatadescription(rs.getString(4));
//				searchForm.setWorddocumentpath(path);
//				searchForm.setWorddocument(rs.getString(3) + "."
//						+ rs.getString(6));
//				vSearchForm.add(searchForm);
//			}
//		} catch (SQLException se) {
//			System.out.println(se);
//		} catch (Exception e) {
//			System.out.println(e);
//		} finally {
//			try {
//				connection.close();
//			} catch (SQLException se) {
//			}
//		}
//		return vSearchForm;
//
//	}
//
//	public List<SearchForm> viewAllCorpusFiles(String realpath, int domainId)
//			throws ConnectionException {
//		List<SearchForm> vSearchForm = new ArrayList<SearchForm>();
//		SearchForm searchForm = null;
//		String path = "";
//		try {
//			connection = AbstractDataAccessObject.getConnection();
//			preparedStatement = connection
//					.prepareStatement("select * from DOMAINCORPUSDOCUMENTS where KEYREF=?");
//			preparedStatement.setInt(1, domainId);
//			ResultSet rs = preparedStatement.executeQuery();
//			while (rs.next()) {
//				searchForm = new SearchForm();
//				path = realpath;
//				try {
//					Blob b = rs.getBlob(5);
//					byte b1[] = b.getBytes(1, (int) b.length());
//					path = path + "/" + rs.getString(3) + "." + rs.getString(6);
//					System.out.println("path  :" + path);
//					OutputStream fout = new FileOutputStream(path);
//					fout.write(b1);
//				} catch (Exception e) {
//					// TODO: handle exception
//				}
//				searchForm.setInterfaceid(rs.getInt(1));
//				searchForm.setKeyref(rs.getInt(2));
//				searchForm.setDatadescription(rs.getString(4));
//				searchForm.setWorddocumentpath(path);
//				searchForm.setWorddocument(rs.getString(3) + "."
//						+ rs.getString(6));
//				vSearchForm.add(searchForm);
//			}
//		} catch (SQLException se) {
//			System.out.println(se);
//		} catch (Exception e) {
//		} finally {
//			try {
//				connection.close();
//			} catch (SQLException se) {
//			}
//		}
//		return vSearchForm;
//	}
}
